* to facilitate reproduction of results:* save both the .do and .dta files in same directory, and set that dir as STATA's working dir * do the .do file, print out the log file created to view results*note: all commands originally run in STATA 8log using marinov_ldpaper, replacedrop _allset mem 20mset matsize 800set more offuse marinov_ldpaper.dta*Table2: Effect of Economic Pressure on Leader's Survival in Office*Table2: Full modelxtlogit fail sanctionsl1 forcel1 growthpc lngdppc democl1 democlnt mixedl1 mixedlnt age ot3 _s*, fe*est store needed for Table 1est store xtlogit*Table2: Omitting economic growthxtlogit fail sanctionsl1 forcel1 lngdppc democl1 democlnt mixedl1 mixedlnt age ot3 _s*, fe*Table2: Omitting economic growth, adding sanctions interactionsxtlogit fail sanctionsl1 xdemocl1 xlngdptl1 xcost xinstl1 forcel1 lngdppc democl1 democlnt mixedl1 mixedlnt age ot3 _s*, fe*Table 1:Summary Statistics of Main Variablessum fail sanctionsl1 forcel1 growthpc lngdppc democl1 mixedl1 age ot3 if _est_xtlogit*note:*the fixed effects drop the n of obs that can be used from 5,812 to about 5,333 (8.2 per cent), and n of countries from 160 to 134*n=24 countries excluded are: *ldchange every by constitution: Switzerland*no change, young countries: Croatia, Slovenia, Belarus, Georgia, Azerbaijan, Turkmenistan, Tajikistan, Uzbekistan, Kyrghystan, Kazakhstan, Eritrea, Namibia  *no change, long-lived monarchs: Bahrain, UAE, Oman*1 change, leader dies in office: Kenya-Kenyatta, Angola-Neto, Mozambique-Machel, Swaziland-Sobhuza, Morocco-Mohammed V, Jordan-King Hussein, NKorea-Kim il-Sung, Nepal-Mahendra*Robustness checks: Sanctions or Force?*A leader of an autocracy is either threatened by or actually suffers foreign violent interventiongen vioorthreatfor=((viofor==1 | threatfor==1)) if vio~=.label var vioor "=((viofor==1 | threatfor==1)) if vio~=."*How many of those instances?count if fail==1 & polity<6 & ldchange==1table sanctions vioorthreatfor if (polity<5 & _est_xt==1), c(n fail)*The rest of this file simulates country-specific predictions for the effect of sanctions*Predict the mean level of leadership instability caused by sanctions by countryxi: logit fail sanctionsl1 forcel1 mixedl1 mixedlnt democl1 democlnt age growthpc lngdppc ot3 _s* i.ccode*preliminaries: mean values of indep vars, by countrysort ccode yearby ccode: egen mot3=mean(ot3) if _est_xtby ccode: egen m_spline1=mean(_spline1) if _est_xtby ccode: egen m_spline2=mean(_spline2) if _est_xtby ccode: egen m_spline3=mean(_spline3) if _est_xtby ccode: egen mforcel1=mean(forcel1) if _est_xtby ccode: egen mmixedl1=mean(mixedl1) if _est_xtby ccode: egen mmixedlnt=mean(mixedlnt) if _est_xtby ccode: egen mdemocl1=mean(democl1) if _est_xtby ccode: egen mdemoclnt=mean(democlnt) if _est_xtby ccode: egen mage=mean(age) if _est_xtby ccode: egen mgrowth=mean(growthpc) if _est_xtby ccode: egen mlngdppc=mean(lngdppc) if _est_xtlabel var mage "by ccode: egen mage=mean(ot3) if _est_xt"*Generating the country-averaged linear prediction, L1 sanctions=on, L2 sanctions=offquietly forvalues i = 0(1)1 {			local k = `i' + 1			gen L`k'=_b[_cons]+_b[sanctionsl1]*(`i')+_b[forcel1]*mforcel1+_b[mixedl1]*mmixedl1+_b[mixedlnt]*mmixedlnt +_b[democl1]*mdemocl1+_b[democlnt]*mdemoclnt +_b[age]*mage +_b[growthpc]*mgrowth +_b[lngdppc]*mlngdppc +_b[ot3]*mot3 +_b[_spline1]*m_spline1 +_b[_spline2]*m_spline2 +_b[_spline3]*m_spline3 if _est_xt & ccode==2}*these are ccodes for countries contributing obs to the modellocal clist*for the simulation, loop over all countries contributing obs, while varying sanctions involvement:quietly foreach j of local clist {			forvalues i = 0(1)1 {						local k = `i' + 1						replace L`k'=_b[_cons]+_b[_Iccode_`j']+_b[sanctionsl1]*(`i')+_b[forcel1]*mforcel1+_b[mixedl1]*mmixedl1+_b[mixedlnt]*mmixedlnt +_b[democl1]*mdemocl1+_b[democlnt]*mdemoclnt +_b[age]*mage +_b[growthpc]*mgrowth +_b[lngdppc]*mlngdppc +_b[ot3]*mot3 +_b[_spline1]*m_spline1 +_b[_spline2]*m_spline2 +_b[_spline3]*m_spline3 if _est_xt & ccode==`j'			}}*Mapping the linear predictions into probabilities via the logistic linkgen Phat1 =1/(1+exp(-L1)) if _est_xtgen Phat2 =1/(1+exp(-L2)) if _est_xt*some labellinglabel var L1 "beta*country mean X+beta_s*sanctionsl1=off"label var L2 "beta*country mean X+beta_s*sanctionsl1=on"label var Phat1 "Prob Survives"label var Phat2 "Prob Survives Under Sanctions"*Provides rankingsort Phat1 yeargen ranking=[_n]egen tag=tag(ccode)sort ccodeby ccode: egen min=min(ranking)sort Phat1 yearegen group=group(Phat1 min) if _est_xtdrop ranking minrename group rankinglabel var ranking "country instability ranking"label var Phat1 "no sanctions"label var Phat2 "sanctions"*now some summary statistics: Sanctions' Effects on Most, Least, Medium Stable Countriessum Phat* rankinglist country ranking Phat1 Phat2 if ranking<11 & _est_xt & taglist country ranking Phat1 Phat2 if ranking>125 & _est_xt & taglist country ranking Phat1 Phat2 if ranking>65 & ranking <75 & _est_xt & taglog closeexit